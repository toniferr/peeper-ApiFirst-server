/*
 * API First with Spring Boot
 * This is an **example** API to demonstrate features of the OpenAPI specification. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: email@email.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.toni.apifirst.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.toni.apifirst.model.OrderLineUpdateDto;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * OrderUpdateDto
 */
@JsonPropertyOrder({
  OrderUpdateDto.JSON_PROPERTY_CUSTOMER_ID,
  OrderUpdateDto.JSON_PROPERTY_SELECT_PAYMENT_METHOD_ID,
  OrderUpdateDto.JSON_PROPERTY_ORDER_LINES
})
@JsonTypeName("order_update")
@lombok.Builder @lombok.AllArgsConstructor
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-04T10:40:23.417268387+02:00[Europe/Madrid]")
public class OrderUpdateDto {
  public static final String JSON_PROPERTY_CUSTOMER_ID = "customerId";
  private UUID customerId;

  public static final String JSON_PROPERTY_SELECT_PAYMENT_METHOD_ID = "selectPaymentMethodId";
  private UUID selectPaymentMethodId;

  public static final String JSON_PROPERTY_ORDER_LINES = "orderLines";
  private List<OrderLineUpdateDto> orderLines;

  public OrderUpdateDto() {
  }

  public OrderUpdateDto customerId(UUID customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid

  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(UUID customerId) {
    this.customerId = customerId;
  }


  public OrderUpdateDto selectPaymentMethodId(UUID selectPaymentMethodId) {
    
    this.selectPaymentMethodId = selectPaymentMethodId;
    return this;
  }

   /**
   * Get selectPaymentMethodId
   * @return selectPaymentMethodId
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SELECT_PAYMENT_METHOD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getSelectPaymentMethodId() {
    return selectPaymentMethodId;
  }


  @JsonProperty(JSON_PROPERTY_SELECT_PAYMENT_METHOD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelectPaymentMethodId(UUID selectPaymentMethodId) {
    this.selectPaymentMethodId = selectPaymentMethodId;
  }


  public OrderUpdateDto orderLines(List<OrderLineUpdateDto> orderLines) {
    
    this.orderLines = orderLines;
    return this;
  }

  public OrderUpdateDto addOrderLinesItem(OrderLineUpdateDto orderLinesItem) {
    if (this.orderLines == null) {
      this.orderLines = new ArrayList<>();
    }
    this.orderLines.add(orderLinesItem);
    return this;
  }

   /**
   * The order lines of the order
   * @return orderLines
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_ORDER_LINES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<OrderLineUpdateDto> getOrderLines() {
    return orderLines;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_LINES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderLines(List<OrderLineUpdateDto> orderLines) {
    this.orderLines = orderLines;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderUpdateDto orderUpdate = (OrderUpdateDto) o;
    return Objects.equals(this.customerId, orderUpdate.customerId) &&
        Objects.equals(this.selectPaymentMethodId, orderUpdate.selectPaymentMethodId) &&
        Objects.equals(this.orderLines, orderUpdate.orderLines);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerId, selectPaymentMethodId, orderLines);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderUpdateDto {\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    selectPaymentMethodId: ").append(toIndentedString(selectPaymentMethodId)).append("\n");
    sb.append("    orderLines: ").append(toIndentedString(orderLines)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

