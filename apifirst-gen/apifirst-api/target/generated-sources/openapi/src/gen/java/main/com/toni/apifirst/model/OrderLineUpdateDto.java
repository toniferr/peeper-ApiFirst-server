/*
 * API First with Spring Boot
 * This is an **example** API to demonstrate features of the OpenAPI specification. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: email@email.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.toni.apifirst.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * OrderLineUpdateDto
 */
@JsonPropertyOrder({
  OrderLineUpdateDto.JSON_PROPERTY_ID,
  OrderLineUpdateDto.JSON_PROPERTY_PRODUCT_ID,
  OrderLineUpdateDto.JSON_PROPERTY_ORDER_QUANTITY
})
@JsonTypeName("order_line_update")
@lombok.Builder @lombok.AllArgsConstructor
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-04T10:40:23.417268387+02:00[Europe/Madrid]")
public class OrderLineUpdateDto {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_PRODUCT_ID = "productId";
  private UUID productId;

  public static final String JSON_PROPERTY_ORDER_QUANTITY = "orderQuantity";
  private Integer orderQuantity;

  public OrderLineUpdateDto() {
  }

  public OrderLineUpdateDto id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * The unique identifier of the order line
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public OrderLineUpdateDto productId(UUID productId) {
    
    this.productId = productId;
    return this;
  }

   /**
   * Get productId
   * @return productId
  **/
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid

  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getProductId() {
    return productId;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProductId(UUID productId) {
    this.productId = productId;
  }


  public OrderLineUpdateDto orderQuantity(Integer orderQuantity) {
    
    this.orderQuantity = orderQuantity;
    return this;
  }

   /**
   * Get orderQuantity
   * minimum: 1
   * maximum: 1000
   * @return orderQuantity
  **/
  @jakarta.annotation.Nonnull
  @NotNull
 @Min(1) @Max(1000)
  @JsonProperty(JSON_PROPERTY_ORDER_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getOrderQuantity() {
    return orderQuantity;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrderQuantity(Integer orderQuantity) {
    this.orderQuantity = orderQuantity;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderLineUpdateDto orderLineUpdate = (OrderLineUpdateDto) o;
    return Objects.equals(this.id, orderLineUpdate.id) &&
        Objects.equals(this.productId, orderLineUpdate.productId) &&
        Objects.equals(this.orderQuantity, orderLineUpdate.orderQuantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, productId, orderQuantity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderLineUpdateDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    orderQuantity: ").append(toIndentedString(orderQuantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

