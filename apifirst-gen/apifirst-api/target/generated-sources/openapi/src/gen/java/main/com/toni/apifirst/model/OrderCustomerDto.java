/*
 * API First with Spring Boot
 * This is an **example** API to demonstrate features of the OpenAPI specification. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: email@email.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.toni.apifirst.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.toni.apifirst.model.AddressDto;
import com.toni.apifirst.model.NameDto;
import com.toni.apifirst.model.PaymentMethodDto;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * OrderCustomerDto
 */
@JsonPropertyOrder({
  OrderCustomerDto.JSON_PROPERTY_ID,
  OrderCustomerDto.JSON_PROPERTY_NAME,
  OrderCustomerDto.JSON_PROPERTY_SHIP_TO_ADDRESS,
  OrderCustomerDto.JSON_PROPERTY_BILL_TO_ADDRESS,
  OrderCustomerDto.JSON_PROPERTY_EMAIL,
  OrderCustomerDto.JSON_PROPERTY_PHONE,
  OrderCustomerDto.JSON_PROPERTY_SELECTED_PAYMENT_METHOD
})
@JsonTypeName("order_customer")
@lombok.Builder @lombok.AllArgsConstructor
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-04T10:40:23.417268387+02:00[Europe/Madrid]")
public class OrderCustomerDto {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_NAME = "name";
  private NameDto name;

  public static final String JSON_PROPERTY_SHIP_TO_ADDRESS = "shipToAddress";
  private AddressDto shipToAddress;

  public static final String JSON_PROPERTY_BILL_TO_ADDRESS = "billToAddress";
  private AddressDto billToAddress;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_PHONE = "phone";
  private String phone;

  public static final String JSON_PROPERTY_SELECTED_PAYMENT_METHOD = "selectedPaymentMethod";
  private PaymentMethodDto selectedPaymentMethod;

  public OrderCustomerDto() {
  }

  @JsonCreator
  public OrderCustomerDto(
    @JsonProperty(JSON_PROPERTY_ID) UUID id
  ) {
    this();
    this.id = id;
  }

   /**
   * System generated unique identifier for the resource.
   * @return id
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }




  public OrderCustomerDto name(NameDto name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NameDto getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(NameDto name) {
    this.name = name;
  }


  public OrderCustomerDto shipToAddress(AddressDto shipToAddress) {
    
    this.shipToAddress = shipToAddress;
    return this;
  }

   /**
   * Get shipToAddress
   * @return shipToAddress
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SHIP_TO_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AddressDto getShipToAddress() {
    return shipToAddress;
  }


  @JsonProperty(JSON_PROPERTY_SHIP_TO_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShipToAddress(AddressDto shipToAddress) {
    this.shipToAddress = shipToAddress;
  }


  public OrderCustomerDto billToAddress(AddressDto billToAddress) {
    
    this.billToAddress = billToAddress;
    return this;
  }

   /**
   * Get billToAddress
   * @return billToAddress
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_BILL_TO_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AddressDto getBillToAddress() {
    return billToAddress;
  }


  @JsonProperty(JSON_PROPERTY_BILL_TO_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillToAddress(AddressDto billToAddress) {
    this.billToAddress = billToAddress;
  }


  public OrderCustomerDto email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * The email address of the customer
   * @return email
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public OrderCustomerDto phone(String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * The phone number of the customer
   * @return phone
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhone(String phone) {
    this.phone = phone;
  }


  public OrderCustomerDto selectedPaymentMethod(PaymentMethodDto selectedPaymentMethod) {
    
    this.selectedPaymentMethod = selectedPaymentMethod;
    return this;
  }

   /**
   * Get selectedPaymentMethod
   * @return selectedPaymentMethod
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SELECTED_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentMethodDto getSelectedPaymentMethod() {
    return selectedPaymentMethod;
  }


  @JsonProperty(JSON_PROPERTY_SELECTED_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelectedPaymentMethod(PaymentMethodDto selectedPaymentMethod) {
    this.selectedPaymentMethod = selectedPaymentMethod;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderCustomerDto orderCustomer = (OrderCustomerDto) o;
    return Objects.equals(this.id, orderCustomer.id) &&
        Objects.equals(this.name, orderCustomer.name) &&
        Objects.equals(this.shipToAddress, orderCustomer.shipToAddress) &&
        Objects.equals(this.billToAddress, orderCustomer.billToAddress) &&
        Objects.equals(this.email, orderCustomer.email) &&
        Objects.equals(this.phone, orderCustomer.phone) &&
        Objects.equals(this.selectedPaymentMethod, orderCustomer.selectedPaymentMethod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, shipToAddress, billToAddress, email, phone, selectedPaymentMethod);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderCustomerDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    shipToAddress: ").append(toIndentedString(shipToAddress)).append("\n");
    sb.append("    billToAddress: ").append(toIndentedString(billToAddress)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    selectedPaymentMethod: ").append(toIndentedString(selectedPaymentMethod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

