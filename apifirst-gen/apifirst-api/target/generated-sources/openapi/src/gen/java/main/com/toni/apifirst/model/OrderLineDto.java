/*
 * API First with Spring Boot
 * This is an **example** API to demonstrate features of the OpenAPI specification. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: email@email.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.toni.apifirst.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.toni.apifirst.model.OrderProductDto;
import java.time.OffsetDateTime;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * OrderLineDto
 */
@JsonPropertyOrder({
  OrderLineDto.JSON_PROPERTY_ID,
  OrderLineDto.JSON_PROPERTY_PRODUCT,
  OrderLineDto.JSON_PROPERTY_ORDER_QUANTITY,
  OrderLineDto.JSON_PROPERTY_SHIP_QUANTITY,
  OrderLineDto.JSON_PROPERTY_DATE_CREATED,
  OrderLineDto.JSON_PROPERTY_DATE_UPDATED
})
@JsonTypeName("order_line")
@lombok.Builder @lombok.AllArgsConstructor
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-04T10:40:23.417268387+02:00[Europe/Madrid]")
public class OrderLineDto {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_PRODUCT = "product";
  private OrderProductDto product;

  public static final String JSON_PROPERTY_ORDER_QUANTITY = "orderQuantity";
  private Integer orderQuantity;

  public static final String JSON_PROPERTY_SHIP_QUANTITY = "shipQuantity";
  private Integer shipQuantity;

  public static final String JSON_PROPERTY_DATE_CREATED = "dateCreated";
  private OffsetDateTime dateCreated;

  public static final String JSON_PROPERTY_DATE_UPDATED = "dateUpdated";
  private OffsetDateTime dateUpdated;

  public OrderLineDto() {
  }

  @JsonCreator
  public OrderLineDto(
    @JsonProperty(JSON_PROPERTY_ID) UUID id, 
    @JsonProperty(JSON_PROPERTY_DATE_CREATED) OffsetDateTime dateCreated, 
    @JsonProperty(JSON_PROPERTY_DATE_UPDATED) OffsetDateTime dateUpdated
  ) {
    this();
    this.id = id;
    this.dateCreated = dateCreated;
    this.dateUpdated = dateUpdated;
  }

   /**
   * System generated unique identifier for the resource.
   * @return id
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }




  public OrderLineDto product(OrderProductDto product) {
    
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid

  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OrderProductDto getProduct() {
    return product;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProduct(OrderProductDto product) {
    this.product = product;
  }


  public OrderLineDto orderQuantity(Integer orderQuantity) {
    
    this.orderQuantity = orderQuantity;
    return this;
  }

   /**
   * The quantity of the product in the order
   * minimum: 1
   * maximum: 10000
   * @return orderQuantity
  **/
  @jakarta.annotation.Nonnull
  @NotNull
 @Min(1) @Max(10000)
  @JsonProperty(JSON_PROPERTY_ORDER_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getOrderQuantity() {
    return orderQuantity;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrderQuantity(Integer orderQuantity) {
    this.orderQuantity = orderQuantity;
  }


  public OrderLineDto shipQuantity(Integer shipQuantity) {
    
    this.shipQuantity = shipQuantity;
    return this;
  }

   /**
   * The quantity of the product shipped
   * minimum: 1
   * maximum: 10000
   * @return shipQuantity
  **/
  @jakarta.annotation.Nullable
 @Min(1) @Max(10000)
  @JsonProperty(JSON_PROPERTY_SHIP_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getShipQuantity() {
    return shipQuantity;
  }


  @JsonProperty(JSON_PROPERTY_SHIP_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShipQuantity(Integer shipQuantity) {
    this.shipQuantity = shipQuantity;
  }


   /**
   * ISO 8601 Timestamp. Date Created and Date Updated are system managed values, should not be sent in request payloads - will be ignored.
   * @return dateCreated
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_DATE_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }




   /**
   * ISO 8601 Timestamp. Date Created and Date Updated are system managed values, should not be sent in request payloads - will be ignored.
   * @return dateUpdated
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_DATE_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderLineDto orderLine = (OrderLineDto) o;
    return Objects.equals(this.id, orderLine.id) &&
        Objects.equals(this.product, orderLine.product) &&
        Objects.equals(this.orderQuantity, orderLine.orderQuantity) &&
        Objects.equals(this.shipQuantity, orderLine.shipQuantity) &&
        Objects.equals(this.dateCreated, orderLine.dateCreated) &&
        Objects.equals(this.dateUpdated, orderLine.dateUpdated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, product, orderQuantity, shipQuantity, dateCreated, dateUpdated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderLineDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    orderQuantity: ").append(toIndentedString(orderQuantity)).append("\n");
    sb.append("    shipQuantity: ").append(toIndentedString(shipQuantity)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

